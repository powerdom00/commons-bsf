# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Maven CI (macOS)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: macos-latest # Use macOS as the environment
    steps:
      # Step 1: Check out the source code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17 on macOS
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Use the Temurin distribution of Java
          java-version: 17       # Specify the Java version required for the project

      # Step 3: Cache Maven dependencies to speed up the build process
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2               # Directory where Maven dependencies are stored
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }} # Cache key based on the OS and pom.xml file
          restore-keys: |
            ${{ runner.os }}-m2     # Fallback keys for restoring cache if the exact match is not found

      # Step 4: Build the project and run tests using Maven
      - name: Build and test with Maven
        run: |
          retry() {
            for i in {1..3}; do
              "$@" && break || sleep 15
            done
          }
          retry mvn clean verify --batch-mode # Compile the project and run all tests